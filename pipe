#include <stdio.h>
#include <unistd.h>

int main() {
    int fd[2];
    pid_t pid;

    if (pipe(fd) == -1) {
        fprintf(stderr, "Pipe failed");
        return 1;
    }

    pid = fork();

    if (pid < 0) {
        fprintf(stderr, "Fork failed");
        return 1;
    }

    if (pid > 0) {  // Parent process
        close(fd[0]); // Close reading end of pipe
        write(fd[1], "Hello, child!", 13); // Write message to child
        close(fd[1]); // Close writing end of pipe
    } else {  // Child process
        close(fd[1]); // Close writing end of pipe
        char message[100];
        read(fd[0], message, 100); // Read message from parent
        printf("Child received: %s\n", message);
        close(fd[0]); // Close reading end of pipe
    }

    return 0;
}

